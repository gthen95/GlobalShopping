@model GlobalShopping.Models.HomeViewModel

@{
	ViewData["Title"] = "Index";
	Layout = "_LayoutHome";
}

<style type="text/css">
	.card {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		border: 1px solid lightgray;
		box-shadow: 2px 2px 8px 4px #d3d3d3d1;
		border-radius: 15px;
		font-family: sans-serif;
		margin: 5px;
	}
</style>


<div class="content-wrapper">
	<section class="content-header">
		<div class="container-fluid">
			<div class="row mb-2">
				<div class="col-sm-6">
					<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Ordenar por Nombre</a>&nbsp;&nbsp;
					<a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]">Ordenar por Precio</a>
				</div>
				<div class="col-sm-6">
					<form asp-action="Index" method="get">
						<div class="form-actions no-color">
							<p>
								Buscar por nombre o categoría: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
								<input type="submit" value="Buscar" class="btn btn-warning" />
								<a asp-action="Index" class="btn btn-success">Ver Todos</a>
							</p>
						</div>
					</form>
				</div>
			</div>

			<div class="row mb-2">
				<div class="col-sm-1">
					<b><h5>Categorías: </h5></b>
				</div>
				<div class="col-sm-11">
					@foreach (var item in Model.Categories)
					{
						<span>@item.Name&nbsp;&nbsp;</span>
					}
				</div>
			</div>
		</div><!-- /.container-fluid -->

	</section>


	<section class="content">
		<div class="container-fluid">

			<div class="row">
				@if (Model.Products.Count() > 0)
				{
					@foreach (var item in Model.Products)
					{
						<div class="col-12 col-sm-6 col-md-4 d-flex align-items-stretch flex-column">
							<div class="card bg-light d-flex flex-fill">

								<div class="card-header text-muted border-bottom-0">
									<h2 class="lead"><b>@item.Name</b></h2>
								</div>

								<div class="card-body">
									<div class="row">
										<div class="col-7">
											<p class="text-muted text-md"><b>Descripción: </b> @item.Description </p>
											<ul class="ml-4 mb-0 fa-ul text-muted">
												<li class="medium"><span class="fa-li"><i class="fa-solid fa-coins"></i></span> <b>Precio: </b> @Html.DisplayFor(modelItem => item.Price)</li>
												<li class="medium"><span class="fa-li"><i class="fa-solid fa-box"></i></span> <b>Inventario: </b> @Html.DisplayFor(modelItem => item.Stock)</li>
											</ul>
										</div>
										<div class="col-5 text-center zoom">
											<img src="@item.ImageFullPath" style="height:150px; max-width:280px;" />
										</div>
									</div>
								</div>

								<div class="card-footer">
									<div class="text-right">
										<a asp-action="Add" asp-route-id="@item.Id" class="btn btn-sm bg-teal">
											<i class="fa-solid fa-cart-plus"></i>
										</a>
										<a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-primary">
											<i class="fas fa-user"></i> Detalles
										</a>
									</div>
								</div>

							</div>
						</div>

					}

					<div class="container-fluid">


						<div class="row">
							@{
								var prevDisabled = !Model.Products.HasPreviousPage ? "disabled" : "";
								var nextDisabled = !Model.Products.HasNextPage ? "disabled" : "";
							}

							<div class="col-12">
								<a asp-action="Index"
							   asp-route-sortOrder="@ViewData["CurrentSort"]"
							   asp-route-pageNumber="@(Model.Products.PageIndex - 1)"
							   asp-route-currentFilter="@ViewData["CurrentFilter"]"
							   class="btn btn-warning @prevDisabled">
									Anterior
								</a>
								<a asp-action="Index"
							   asp-route-sortOrder="@ViewData["CurrentSort"]"
							   asp-route-pageNumber="@(Model.Products.PageIndex + 1)"
							   asp-route-currentFilter="@ViewData["CurrentFilter"]"
							   class="btn btn-success @nextDisabled">
									Siguiente
								</a>
							</div>


						</div>

					</div>

				}
				else
				{
					<h3>No hay productos con su criterio de búsqueda</h3>
				}

			</div>




		</div>
	</section>

	@*<section class="content-footer">
		<div class="container-fluid">


		<div class="row">
		@{
		var prevDisabled = !Model.Products.HasPreviousPage ? "disabled" : "";
		var nextDisabled = !Model.Products.HasNextPage ? "disabled" : "";
		}

		<div class="col-12">
		<a asp-action="Index"
		asp-route-sortOrder="@ViewData["CurrentSort"]"
		asp-route-pageNumber="@(Model.Products.PageIndex - 1)"
		asp-route-currentFilter="@ViewData["CurrentFilter"]"
		class="btn btn-warning @prevDisabled">
		Anterior
		</a>
		<a asp-action="Index"
		asp-route-sortOrder="@ViewData["CurrentSort"]"
		asp-route-pageNumber="@(Model.Products.PageIndex + 1)"
		asp-route-currentFilter="@ViewData["CurrentFilter"]"
		class="btn btn-success @nextDisabled">
		Siguiente
		</a>
		</div>


		</div>




		</div><!-- /.container-fluid -->

		</section>*@
</div>

@section Scripts {
	@{
	await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
